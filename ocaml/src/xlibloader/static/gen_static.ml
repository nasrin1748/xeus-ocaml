(* gen_stdlib_cmi.ml *)
#use "topfind" ;;
#require "unix";;

let () =
  let static_stdlib_dir = "stdlib" in
  let out = open_out "static_files.ml" in
  Fun.protect
    ~finally:(fun () -> close_out out)
    (fun () ->
      Printf.fprintf out "(* This file is generated by gen_static.ml. DO NOT EDIT. *)\n";
      Printf.fprintf out "let files = [\n";
      try
        let dir = Unix.opendir static_stdlib_dir in
        Fun.protect
          ~finally:(fun () -> Unix.closedir dir)
          (fun () ->
            let rec iter_artifacts () =
              match Unix.readdir dir with
              | exception End_of_file -> ()
              | file ->
                if Filename.check_suffix file ".cmi" ||
                   Filename.check_suffix file ".cmt" ||
                   Filename.check_suffix file ".cmti"
                then (
                  let relative_path = Filename.concat static_stdlib_dir file in
                  Printf.fprintf out "  (%S, [%%blob %S]);\n" file relative_path
                );
                iter_artifacts ()
            in
            iter_artifacts ()
          );
        Printf.fprintf out "]\n"
      with Unix.Unix_error _ ->
        Printf.eprintf "Warning: 'static/stdlib' directory not found. Generating empty static list.\n%!";
        Printf.fprintf out "]\n"
    )