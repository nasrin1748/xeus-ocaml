let () =
  let dynamic_stdlib_dir = "stdlib" in
  (* Let's rename the output file for clarity, since it contains file names, not module names. *)
  let out = open_out "dynamic_files.ml" in 
  Fun.protect
    ~finally:(fun () -> close_out out)
    (fun () ->
      Printf.fprintf out "(* This file is generated by gen_dynamic.ml. DO NOT EDIT. *)\n";
      (* The generated value is now a simple string list of filenames. *)
      Printf.fprintf out "let files : string list = [\n";
      try
        let all_files_in_dir = Sys.readdir dynamic_stdlib_dir in
        let artifact_files =
          Array.fold_left
            (fun acc file ->
              (* We now look for all three artifact types. *)
              if Filename.check_suffix file ".cmi" ||
                 Filename.check_suffix file ".cmt" ||
                 Filename.check_suffix file ".cmti"
              then
                file :: acc (* Just add the raw filename to the list. *)
              else
                acc
            )
            [] all_files_in_dir
        in
        (* Sort for deterministic output. *)
        let sorted_files = List.sort_uniq String.compare artifact_files in
        List.iter (fun file -> Printf.fprintf out "  %S;\n" file) sorted_files;
        Printf.fprintf out "]\n"
      with Sys_error _ ->
        Printf.eprintf "Warning: 'dynamic/stdlib' directory not found. Generating empty dynamic list.\n%!";
        Printf.fprintf out "]\n"
    )