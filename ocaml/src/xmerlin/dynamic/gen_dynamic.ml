(* gen_dynamic.ml *)
let () =
  let dynamic_stdlib_dir = "stdlib" in
  let out = open_out "dynamic_modules.ml" in
  Fun.protect
    ~finally:(fun () -> close_out out)
    (fun () ->
      Printf.fprintf out "(* This file is generated by gen_dynamic.ml. DO NOT EDIT. *)\n";
      Printf.fprintf out "let modules = [\n";
      try
        let files = Sys.readdir dynamic_stdlib_dir in
        let modules =
          Array.fold_left
            (fun acc file ->
              if Filename.check_suffix file ".cmi" then
                let mod_name_lower = Filename.chop_extension file in
                match String.split_on_char '_' mod_name_lower with
                | ["stdlib"] -> "Stdlib" :: acc
                | ["stdlib"; ""; mod_part] when mod_part <> "" ->
                    String.capitalize_ascii mod_part :: acc
                | ["xlib"] -> "Xlib" :: acc
                | _ -> acc
              else acc)
            [] files
        in
        let sorted_modules = List.sort String.compare modules in
        List.iter (fun mod_name -> Printf.fprintf out "  \"%s\";\n" mod_name) sorted_modules;
        Printf.fprintf out "]\n"
      with Sys_error _ ->
        Printf.eprintf "Warning: 'dynamic/stdlib' directory not found. Generating empty dynamic list.\n%!";
        Printf.fprintf out "]\n"
    )